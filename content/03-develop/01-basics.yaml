title: The Basics
milestones:
  - title: Create a Database
    description: |
      There is no limit to how many databases can be created or opened on the device. You can think of a database as a namespace for documents and several databases can be used in the same app (one database per user of the app is a common pattern). The code below creates an empty database.
      *QUESTION*  How to show language specific code ?

      ```swift
          // This code can be found in DatabaseManager.swift file
          // in the openOrCreateDatabaseForGuest() function

          // Setup Database Configuration
          var options = DatabaseConfiguration()
          guard let defaultDBPath = _applicationSupportDirectory else {
                fatalError("Could not open Application Support Directory for app!")
                return
            }
            // Create a folder for Guest Account if one does not exist
            let guestFolderUrl = defaultDBPath.appendingPathComponent("guest", isDirectory: true)
            let guestFolderPath = guestFolderUrl.path
            let fileManager = FileManager.default
            if !fileManager.fileExists(atPath: guestFolderPath) {
                try fileManager.createDirectory(atPath: guestFolderPath,
                                                withIntermediateDirectories: true,
                                                attributes: nil)
                
            }
            
            options.directory = guestFolderPath
            // Create / Open Database with specified options
            _db = try Database(name: kGuestDBName, config: options)
      ```
      
    tryitout:
      - Build and Run the Travel Sample Mobile App
      - On Login screen select “Proceed as Guest” option. 
      - This will log you into app in Guest Mode. Signing in as Guest will create a new empty  database for “guest” account if one does not exist
      - Confirm that you see the “Bookmarked Hotels” page. It will be empty the very first time. 

  - title: Create a Document
    description: |
      In Couchbase Lite, the primary entity stored in a database is called a document instead of a "row" or "record". A document's body takes the form of a JSON object — a collection of key/value pairs where the values can be different types of data such as numbers, strings, arrays, dates, blobs or even nested objects. The code below creates a new _"BookmarkedHotels"_ document if one does not exist. For every new hotel Id that is added to the "hotels" array in the _"BookmarkedHotels"_ document, the corresponding "hotel" document is added to the database
      
      ```swift
        // Code snippets can be found in HotelPresenter.swift file in the bookmarkHotels() function. 
        // For brevity, some portions of the code that are not specific to document creation have been removed here.

        // get existing "BookmarkedHotels" document if one exists
        var document = try fetchGuestBookmarkDocumentFromDB(db)
                 
        if document == nil {
            // First time bookmark is created for guest account
            // Create document of type "bookmarkedhotels"
            document = Document.init(dictionary: ["type":"bookmarkedhotels","hotels":[String]()])               
        }
        // .... trimming other app logic code   ....

        // For every hotel that is bookmarked and added to the ""
        if let document = document {
            // add the Id of the bookmarked hotel to the "hotels" array
            document.setArray(bookmarked, forKey: "hotels")

           // Save the "bookmarkedhotel" document in database    
           try db.save(document)
                        
           // ....trimming other app logic code ......   

           // For every hotel that is bookmarked, add the corresponding "hotel" document to database     
           for hotelDoc in docsToAdd {
                  if let idVal = hotelDoc["id"] as? String {
                     if let doc = db.getDocument(idVal) {
                          doc.setDictionary(hotelDoc)
                          try db.save(doc)
                       }
                      else {
                          try db.save(Document.init(idVal, dictionary: hotelDoc))
                       }
                  }
           }
       }
      ```
      
    tryitout:
      - As Guest User, tap on “hotels” button
      - In "location" text field , enter "London"
      - You will see list of hotels. 
      - The list of hotels is pulled from the Couchbase Server via the Travel Sample Web Services API. 
        The list of hotels is not displayed unless there is an open connection the python web app so make sure you have your Travel Sample Web app running
      - Swipe right on the first hotel cell
      - You will get option to  “Bookmark” 
      - Tap “bookmark”
      - This should display a "bookmark" icon on the hotel cell
      - Tap "Cancel" button 
      - Verify that you see the bookmarked hotel in the “Bookmarked Hotels” screen. A motivation for having separate docs for each bookmarked hotel is if they become sharable between users via the sync function.
