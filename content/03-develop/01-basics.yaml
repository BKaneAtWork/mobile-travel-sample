title: The Basics
milestones:
  - title: Create a Database
    description: |
      There is no limit to how many databases can be created or opened on the device. You can think of a database as a namespace for documents and several databases can be used in the same app (one database per user of the app is a common pattern).
      
      The code below creates an empty database for `guest` user.
      *QUESTION*  How to show language specific code ?

      ```swift
          // This code can be found in DatabaseManager.swift file
          // in the openOrCreateDatabaseForGuest() function

          // Setup Database Configuration
          var options = DatabaseConfiguration()
          guard let defaultDBPath = _applicationSupportDirectory else {
                fatalError("Could not open Application Support Directory for app!")
                return
            }
            // Create a folder for Guest Account if one does not exist
            let guestFolderUrl = defaultDBPath.appendingPathComponent("guest", isDirectory: true)
            let guestFolderPath = guestFolderUrl.path
            let fileManager = FileManager.default
            if !fileManager.fileExists(atPath: guestFolderPath) {
                try fileManager.createDirectory(atPath: guestFolderPath,
                                                withIntermediateDirectories: true,
                                                attributes: nil)
                
            }
            
            options.directory = guestFolderPath
            // Create / Open Database with specified options
            _db = try Database(name: kGuestDBName, config: options)
      ```
    tryitout:
      - Build and Run the Travel Sample Mobile App
      - On Login screen select “Proceed as Guest” option. 
      - This will log you into app in Guest Mode. Signing in as Guest will create a new empty  database for “guest” account if one does not exist
      - Confirm that you see the “Bookmarked Hotels” page. It will be empty the very first time. 

  - title: Create a Document
    description: |
      In Couchbase Lite, the primary entity stored in a database is called a document instead of a "row" or "record". A document's body takes the form of a JSON object — a collection of key/value pairs where the values can be different types of data such as numbers, strings, arrays, dates, blobs or even nested objects. 
      
      The code snippet below creates a new _"bookmarkedhotels"_ document if one does not exist. The first time a hotel is bookmarked, the _"bookmarkedhotels"_ document is created with the "hotels" property holding the bookmarked hotel Id. For every hotel Id that is added to the "hotels" property array in the _"bookmarkedhotels"_ document, the corresponding "hotels" document containing details of the hotel is added to the database. 
      For brevity, the following code snippet only shows the creation of the _"bookmarkedhotels"_ document. The creation/addition of hotel document would be similar.
      
      ```swift
        // Code snippets can be found in HotelPresenter.swift file in the bookmarkHotels() function. 
        // For brevity, some portions of the code that are not specific to document creation have been removed here.

        // get existing "BookmarkedHotels" document if one exists
        var document = try fetchGuestBookmarkDocumentFromDB(db)
                 
        if document == nil {
            // First time bookmark is created for guest account
            // Create document of type "bookmarkedhotels"
            document = Document.init(dictionary: ["type":"bookmarkedhotels","hotels":[String]()])               
        }
        // .... trimming other app logic code   ....

        if let document = document {
            // add the Id of the bookmarked hotel to the "hotels" property 
            document.setArray(bookmarked, forKey: "hotels")

           // Save the "bookmarkedhotel" document in database    
           try db.save(document)
                        
           // ....trimming other app logic code ......   
       }
      ```
      ![](https://raw.githubusercontent.com/couchbaselabs/mobile-travel-sample/connect_sv/content/assets/basics_add_document.gif)
  
    tryitout:
      - As Guest User, tap on “hotels” button
      - In "location" text field , enter "London"
      - You will see list of hotels. 
      - The list of hotels is pulled from the Couchbase Server via the Travel Sample Web Services API. The list of hotels is not displayed unless there is an open connection the python web app so make sure you have your Travel Sample Web app running
      - Swipe right on the first hotel cell
      - You will get option to  “Bookmark” 
      - Tap “bookmark”
      - This should display a "bookmark" icon on the hotel cell
      - Tap "Cancel" button
      - Verify that you see the bookmarked hotel in the “Bookmarked Hotels” screen. A motivation for having separate docs for each bookmarked hotel is if they become sharable between users via the sync function.

  - title: Update a Document
    description: |
      To update a document, you must retrieve it from the database, modify the desired properties and write them back to the database. The update method does this operation for you in the form of a callback. 
      
      The code below updates the list of bookmarked hotel Ids in the "hotels" property of the _"bookmarkedhotels"_ document. The first time a hotel is bookmarked, the _"bookmarkedhotels"_ document is created. Subsequently, every time you bookmark a hotel, the hotel Id is added to "hotels" property of the _"bookmarkedhotels"_ document.

      
      ```swift
          // Code snippets can be found in HotelPresenter.swift file in the bookmarkHotels() function. 
          // For brevity, some portions of the code that are not specific to document updation have been removed here.

          // get existing "BookmarkedHotels" document if one exists
          var document = try fetchGuestBookmarkDocumentFromDB(db)
                 
          // ....trimming other app logic code ...... 

          // Update the bookmarked list with the Ids of hotels
          var bookmarked = document?.array(forKey: "hotels")
                    
          // Ideally have an API that would append elements of a native array to existing ArrayObject
          for newId in newlyAddedIds {
               bookmarked = bookmarked?.addString(newId)
          }
                    
          if let document = document {
            // Update and save the bookmark document
            document.setArray(bookmarked, forKey: "hotels")
            try db.save(document)
               
            // ....trimming other app logic code ...... 
          }
      ```
      ![](https://raw.githubusercontent.com/couchbaselabs/mobile-travel-sample/connect_sv/content/assets/basics_update_document.gif)
 
    tryitout:
      - Follow the steps in [Create a Document]() section (QUESTION - JAMES.N CAN WE ADD A LINK?)
      - As Guest User, tap on “hotels” button
      - In "location" text field , enter "London"
      - You will see list of hotels. 
      - Verify that the first hotel in the list is bookmarked. If not, make sure you follow instructions in [Create a Document]() section.
      - Swipe right on the second hotel cell
      - You will get option to  “Bookmark” 
      - Tap “bookmark”
      - This should display a "bookmark" icon on the hotel cell
      - Tap "Cancel" button 
      - Verify that you see two bookmarked hotels in the “Bookmarked Hotels” screen

  - title: Delete a Document
    description: |
      A document can be deleted using the `delete` method. This operation actually creates a new `tombstoned` revision in order to propagate the deletion to other clients.
      
      The code below deletes the "hotels" document from the database every time a hotel is unbookmarked. The unbookmarking process removes the hotel Id from the "bookmarkedhotels" document and deletes the unbookmarked "hotels" document from the database. 

      
      ```swift
          // Code snippets can be found in HotelPresenter.swift file in the unookmarkHotels() function. 
          // For brevity, some portions of the code that are not specific to document creation have been removed here.

          if let doc = db.getDocument(idOfDocToRemove) {
             try db.delete(doc)
          }
      ```
      ![](https://raw.githubusercontent.com/couchbaselabs/mobile-travel-sample/connect_sv/content/assets/basics_delete_document.gif)
 
    tryitout:
      - Follow the steps in [Update a Document]() section (QUESTION - JAMES.N CAN WE ADD A LINK?)
      - Confirm that you see two bookmarked hotels in the "Bookmarked Hotels" screen. If not, make sure you go through the instructions in [Update a Document]() section 
      - Swipe right on first Hotel cell
      - You will get option to  “UnBookmark” 
      - Tap “unbookmark”
      - Verify that you see a single hotel in the list